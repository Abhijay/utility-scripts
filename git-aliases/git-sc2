#!/bin/bash

# Run `git sl`, reverse the output, and use `fzf` for multi-selection with live diff preview
selected_commits=$(git sl | tail -r | fzf --multi --style full \
    --border --padding 1,2 \
    --border-label ' Demo ' --input-label ' Input ' --header-label ' File Type ' \
    --preview 'commit_hash=$(echo "{}" | grep -oE "[0-9a-f]{7,}" | head -1); \
    if [[ -n "$commit_hash" ]]; then git diff --name-only "$commit_hash"^!; else echo ""; fi' \
    --bind 'result:transform-list-label:
        if [[ -z $FZF_QUERY ]]; then
          echo " $FZF_MATCH_COUNT items "
        else
          echo " $FZF_MATCH_COUNT matches for [$FZF_QUERY] "
        fi
        ' \
    --bind 'focus:transform-preview-label:[[ -n {} ]] && printf " Previewing [%s] " {}' \
    --bind 'focus:+transform-header:file --brief {} || echo "No file selected"' \
    --bind 'ctrl-r:change-list-label( Reloading the list )+reload(sleep 2; git ls-files)' \
    --color 'border:#aaaaaa,label:#cccccc' \
    --color 'preview-border:#9999cc,preview-label:#ccccff' \
    --color 'list-border:#669966,list-label:#99cc99' \
    --color 'input-border:#996666,input-label:#ffcccc' \
    --color 'header-border:#6699cc,header-label:#99ccff'
)

# Extract commit hashes from selected lines
commit_hashes=$(echo "$selected_commits" | grep -oE "[0-9a-f]{7,}" | tr '\n' ' ' | sed 's/ $//')

# If hashes were found, print and copy them; otherwise, handle empty selection
if [[ -n "$commit_hashes" ]]; then
    echo "$commit_hashes"
    echo "$commit_hashes" | pbcopy  # macOS
    # Uncomment below for Linux (requires xclip or xsel)
    # echo "$commit_hashes" | xclip -selection clipboard
    exit 0
else
    echo ""
    exit 1
fi
