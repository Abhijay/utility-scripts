#!/bin/bash

# Default parent reference (main branch)
PARENT_REF="main"

# Parse arguments
while getopts "p:" opt; do
    case ${opt} in
        p)
            PARENT_REF=${OPTARG}
            ;;
        *)
            echo "Usage: $0 [-p PARENT_COMMIT_OR_BRANCH]"
            exit 1
            ;;
    esac
done

# Validate if the reference exists in Git
if ! git rev-parse --verify "$PARENT_REF" >/dev/null 2>&1; then
    echo "❌ Error: '$PARENT_REF' is not a valid commit or branch."
    exit 1
fi

RANGE="${PARENT_REF}..HEAD"

echo "Checking for unsigned or unverified commits in the current branch (from $PARENT_REF to HEAD)..."

# Get the list of commits in the specified range and check if any are not signed correctly
unsigned_commits=$(git log $RANGE --pretty=format:'%H %G?' | grep -Ev 'G$|E$')

if [ -z "$unsigned_commits" ]; then
    echo "✅ All commits are signed or had signature verification errors!"
    exit 0
else
    echo "❌ The following commits are unsigned or unverified:"
    echo "$unsigned_commits" | awk '{print "Commit: "$1}'
    exit 1
fi
